@using X.PagedList.Mvc.Core
@using X.PagedList
@model X.PagedList.IPagedList<budimeb.Models.Project>

@{
    ViewBag.Title = ViewBag.CategoryName;
}
<head>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.1.3/js/bootstrap.bundle.min.js"></script>
    <link href="~/css/category_page.css" rel="stylesheet" />
</head>
<div style="margin-left:3rem; margin-right:3rem; color:black; font-family: 'Josefin Sans', sans-serif;">
    <div class="article-container">
        <div style="display: flex; align-items: center; font-family: 'Josefin Sans', sans-serif; font-size:38px;">
            <img src="@ViewBag.Icon" style="width:50px; height:50px; margin-right: 10px;" alt="@ViewBag.CategoryName" />
            @ViewBag.CategoryName
        </div>

        <div class="underline"></div>

        <div class="gallery-container d-flex flex-wrap" style="margin-top:4rem;">
            @foreach (var project in Model)
            {
                var carouselId = $"carousel_{project.ProjectId}";
                var projectPhotos = project.Photos.Select(p => p.PhotoPath).ToList();
                var jsonProjectPhotos = Newtonsoft.Json.JsonConvert.SerializeObject(projectPhotos);
                var projectDescription = project.Description;
                <div id="@carouselId" class="carousel slide carousel-fade mb-4 me-4" data-bs-ride="carousel" style="width: 300px; height: 300px; overflow: hidden;">
                    <!-- Indicators -->
                    <div class="carousel-indicators">
                        @{
                            var photoIndex = 0;
                        }
                        @foreach (var photo in project.Photos)
                        {
                            <button type="button" data-bs-target="#@carouselId" data-bs-slide-to="@photoIndex" @(photoIndex == 0 ? "class=active" : "") aria-current="true" aria-label="Slide @photoIndex"></button>
                            photoIndex++;
                        }
                    </div>

                    <!-- Inner -->
                    <div class="carousel-inner" style="width: 100%; height: 100%;">
                        @{
                            var isActive = "active";
                        }
                        @foreach (var photo in project.Photos)
                        {
                            <div class="carousel-item @isActive" style="width: 100%; height: 100%;">
                                <img src="@photo.PhotoPath" class="d-block w-100 h-100 object-fit-cover modal-img" alt="Project Image" data-description="@photo.Description" onclick="showEnlargedImage('@photo.PhotoPath', @Html.Raw(jsonProjectPhotos.Replace("\"", "&quot;")), '@projectDescription')" />
                                <div class="carousel-caption d-none d-md-block">
                                    <p><b>@project.Description</b></p>
                                    <p>@photo.Description</p>
                                </div>
                            </div>
                            isActive = "";
                        }
                    </div>

                    <!-- Controls -->
                    <button class="carousel-control-prev" type="button" data-bs-target="#@carouselId" data-bs-slide="prev">
                        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                        <span class="visually-hidden">Previous</span>
                    </button>
                    @if (User.Identity.IsAuthenticated)
                    {
                        <a href="@Url.Action("Edit", "Home", new { id = project.ProjectId })" class="edit-btn"><i class="fas fa-pencil-alt"></i></a>
                    }
                    <button class="carousel-control-next" type="button" data-bs-target="#@carouselId" data-bs-slide="next">
                        <span class="carousel-control-next-icon" aria-hidden="true"></span>
                        <span class="visually-hidden">Next</span>
                    </button>
                </div>
            }
        </div>

        <!-- Pagination -->
        <div class="pagination-container">
            @Html.PagedListPager(Model, page => Url.Action("Category", new { categoryId = ViewBag.CategoryId, page = page }))
        </div>
    </div>
</div>

@section Scripts {
    <script>
        let currentImageIndex = 0;
        let currentProjectPhotos = [];
        let currentProjectDescription = '';

        function showEnlargedImage(imageSrc, projectPhotos, projectDescription) {
            currentImageIndex = projectPhotos.indexOf(imageSrc);
            currentProjectPhotos = projectPhotos;
            currentProjectDescription = projectDescription;

            var enlargedImageContainer = document.createElement("div");
            enlargedImageContainer.classList.add("enlarged-image-container");

            var enlargedImage = document.createElement("img");
            enlargedImage.src = imageSrc;
            enlargedImage.classList.add("enlarged-image");

            var closeButton = document.createElement("span");
            closeButton.innerHTML = "&times;";
            closeButton.classList.add("close-btn");
            closeButton.onclick = function () {
                document.body.removeChild(enlargedImageContainer);
                document.removeEventListener('keydown', handleKeyDown);
            };

            var prevButton = document.createElement("span");
            prevButton.innerHTML = "&#10094;";
            prevButton.classList.add("nav-btn", "prev");
            prevButton.onclick = function (event) {
                event.stopPropagation();
                navigateImage(-1);
            };

            var nextButton = document.createElement("span");
            nextButton.innerHTML = "&#10095;";
            nextButton.classList.add("nav-btn", "next");
            nextButton.onclick = function (event) {
                event.stopPropagation();
                navigateImage(1);
            };

            if (currentProjectDescription) {
                var projectDescriptionDiv = document.createElement("div");
                projectDescriptionDiv.classList.add("description", "project-description");
                projectDescriptionDiv.innerHTML = currentProjectDescription;
                enlargedImageContainer.appendChild(projectDescriptionDiv);
            }

            var description = document.createElement("div");
            description.classList.add("description", "photo-description");

            const photoDescription = document.querySelector(`img[src='${imageSrc}']`).getAttribute('data-description');
            description.innerHTML = photoDescription ? photoDescription : '';

            enlargedImageContainer.appendChild(enlargedImage);
            enlargedImageContainer.appendChild(closeButton);
            enlargedImageContainer.appendChild(prevButton);
            enlargedImageContainer.appendChild(nextButton);
            enlargedImageContainer.appendChild(description);
            document.body.appendChild(enlargedImageContainer);

            // Kliknięcie poza obrazkiem również zamyka powiększenie
            enlargedImageContainer.onclick = function (event) {
                if (event.target === enlargedImageContainer) {
                    document.body.removeChild(enlargedImageContainer);
                    document.removeEventListener('keydown', handleKeyDown);
                }
            };

            // Dodanie obsługi klawiszy
            document.addEventListener('keydown', handleKeyDown);
        }

        function navigateImage(direction) {
            currentImageIndex = (currentImageIndex + direction + currentProjectPhotos.length) % currentProjectPhotos.length;
            var newImageSrc = currentProjectPhotos[currentImageIndex];
            var enlargedImage = document.querySelector('.enlarged-image');
            var description = document.querySelector('.photo-description');
            var projectDescription = document.querySelector('.project-description');
            enlargedImage.src = newImageSrc;
            description.innerHTML = document.querySelector(`img[src='${newImageSrc}']`).getAttribute('data-description') || '';
            if (projectDescription) {
                projectDescription.innerHTML = currentProjectDescription;
            }
        }

        function handleKeyDown(event) {
            if (event.key === 'ArrowLeft') {
                navigateImage(-1);
            } else if (event.key === 'ArrowRight') {
                navigateImage(1);
            } else if (event.key === 'Escape') {
                var enlargedImageContainer = document.querySelector('.enlarged-image-container');
                if (enlargedImageContainer) {
                    document.body.removeChild(enlargedImageContainer);
                    document.removeEventListener('keydown', handleKeyDown);
                }
            }
        }
    </script>
}
